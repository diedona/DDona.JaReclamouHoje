# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - src/frontend

variables:
  - name: backendProjectSrc
    value: 'src/backend/**/*.csproj'
  - name: vmImageUbuntu
    value: 'ubuntu-latest'

stages:
  - stage: Backend
    displayName: "Backend"
    jobs:
      - job: CI
        pool:
          vmImage: $(vmImageUbuntu)
        displayName: 'CI'
        steps:
          - task: DotNetCoreCLI@2
            displayName: 'Restaurando'
            inputs:
              command: 'restore'
              projects: $(backendProjectSrc)
              feedsToUse: 'select'
          - task: DotNetCoreCLI@2
            displayName: 'Fazendo Build'
            inputs:
              command: 'build'
              projects: $(backendProjectSrc)
          - task: DotNetCoreCLI@2
            displayName: 'Rodando Testes de Unidade'
            inputs:
              command: 'test'
              projects: '$(backendProjectSrc)'
              testRunTitle: 'Executando testes'
          - task: DotNetCoreCLI@2
            displayName: 'Gerando Publish'
            inputs:
              command: 'publish'
              publishWebProjects: true
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Enviando arquivos'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'

      - job: CD
        dependsOn: CI
        condition: succeded()
        pool:
          vmImage: $(vmImageUbuntu)
        displayName: 'CD'
        steps:
          - task: Bash@3
            displayName: 'teste s√≥'
            inputs:
              targetType: 'inline'
              script: |
                # Write your commands here
                
                echo 'Hello world'